#include <stdio.h>
#include <stdlib.h>
#include "list.h"

#define EXIT_FAILURE 1
#define C 4 
#define L 4

int Tab3[L][C]={{8,4,9,15},{5,5,9,15},{9,4,9,15},{15,4,9,15}};
int Tab2[C];
void functionPC(int l,int *Tab,Liste *liste,int a)
{   int i=0;
    if (liste == NULL)
    {
        exit(EXIT_FAILURE);
    }

    Element *actuel = liste->premier;
    int k=0;
    int err=0;
    int first=0;
    int cont=0;
while (i<l && actuel != NULL)
    {
   while (i<l && actuel->nombre != Tab[i]) {
      i++;
   }
   if (i<l) {
       k++;
       if(k==1)
       {cont=1;first=i;}
      actuel = actuel->suivant;
   } else {
      err=1;
   }

   }
   if((cont==1)&&(err!=1)) {printf("L'élément first = %d", first );
      }
   if(err!=1) {printf("L'élément last = %d\n", i );
      }
      
}



int functionSE(int c,int *Tab,int a)
{
   int b; 
  Liste *maListe ;
  Liste *maListe1 ;  
int tab=Tab[a];
if(tab<Tab[a+1])
 {maListe = initialisation(Tab[a]);}
 else {
     a++;
     int tab=Tab[a];
     for (int i = a+1; i < c-1; i++)
     {
        if(Tab[i]>tab)
            
                maListe = initialisation(Tab[a]);
               break;           
     tab=Tab[i];
     }
}
for (int i = a+1; i < c; i++)
{  
    if(Tab[i]>tab)
    {       
        insertion(maListe, Tab[i]);
        b = i;
    }
    else {b = i;break;}
     tab=Tab[i];    
}   maListe1= inverseListe(maListe);
    afficherListe(maListe1);
    for(int jj=0;jj<L;jj++)
    {for(int kk=0;kk<C;kk++)
    {
        Tab2[kk]=Tab3[jj][kk];
        printf("%d ", Tab2[kk] );
    }
    printf("\n" );
    functionPC(L,Tab2,maListe1,L);
    }
    return b;   
}
int main()
{
for(int j=0;j<C;j++){
    int a=0;
    
 do{
int i=functionSE(C,Tab3[j],a);
a=i;

}while(a<C-1);
}
    return 0;

}
